#병합정렬(머지정렬)
#시간초과
import sys

n = int(sys.stdin.readline())       	#정렬할 정수의 개수 입력
x = []                              		#정렬할 정수 받은 리스트 선언
for i in range(n):                  	#리스트에 정렬할 정수 입력
    x.append(int(sys.stdin.readline()))
y = [0]*len(x)

def sort(start, end):
    if start >= end:    #크기가 1인 경우
        return 
    mid = (start+end) // 2
    sort(start, mid)    #받은 리스트의 반씩 재귀함수로 나눠줌
    sort(mid+1,end)
    merge(start,end)    #다 나눴으면 다시 합쳐주기 위해 merge함수 호출
    return x
    
def merge(start, end):
    mid = (start+end)//2    #sort에서 2개의 리스트로 구분했으니 여기서도 확인하기 위해 2개로 나눔
    i, j, k = start, mid+1, 0
    while i<=mid and j<=end:
        if x[i]<=x[j]:  #현재 리스트에서 받을 값이 중간값보다 작거나 같은경우
            y[k] = x[i]
            k+=1
            i+=1
        else:#x[i]>x[j]인 경우 즉, 현재 리스트에서 받을 값이 중간값보다 큰 경우
            y[k] = x[j]
            k+=1
            j+=1
    while i<=mid:   #리스트의 값을 모두 넘겨준다
        y[k] = x[i]
        k += 1
        i += 1
    while j<=end:
        y[k] = x[j]
        k+=1
        j+=1
    for i in range(start,end+1):
        x[i] = y[i-start]#임시배열에 값을 원래 배열에 넘겨줌
    return x
            
    
array = sort(0,len(x)-1)
for i in array:
    print(i)

#출력을 다르게 하는 법
import sys
n = int(sys.stdin.readline())
x = [0]*n
for i in range(n):
    x[i] = int(sys.stdin.readline())
y = [0]*len(x)

def merge(start,end):
    if start>=end:
        return
    mid = (start+end)//2
    merge(start,mid)
    merge(mid+1,end)

    i,j,k = start, mid+1, start
    while i<=mid and j<=end :
        if x[i]<=x[j]:
            y[k] = x[i]
            k+=1
            i+=1
        else:
            y[k] = x[j]
            k+=1
            j+=1

    while i<=mid:
        y[k] = x[i]
        k+=1
        i+=1
    while j<=end:
        y[k] = x[j]
        k+=1
        j+=1

    for i in range(start,end+1):
        x[i] = y[i]

merge(0,len(x)-1)
for i in x:
    sys.stdout.write(str(i)+'\n')