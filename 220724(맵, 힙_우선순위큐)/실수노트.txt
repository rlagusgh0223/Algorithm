7.24.
10-4
문제를 해결하는 식은 기억했지만, 그 식에 값을 넣는건 기억하지 못했다.
------------------------------
11-2-1
힙 선언, 입력, 출력하는 방법을 모름
------------------------------
11-2-2
작은 수 두개를 더한 다음 그 값을 다시 힙에 넣고, 총값과 계산해야 되는데
총 계산 값을 힙에 넣었다
heapq.heappush(card, answer)
가 아닌
heapq.heappush(card, first+second)
로 해야됨
내일은 heapify를 이용해서 n개의 카드를 힙으로 변환하는 방법도 사용해보겠다

=====================================

7.25.
10-4
cloth에 있는 값이라는 뜻으로 if cloth[type]을 사용했으나, 그렇게는 안된다고 한다
딕셔너리의 키값과 비교하도록 하자

for now in cloth를 해도, for now in cloth.keys()를 해도 결과는 똑같다
-----------------
11-2-1
맞춤
문제 끝까지 볼 것
-------------------------
11-2-2
최소힙으로 구해야 하므로 -1을 곱할 필요 없다
이번엔 입력값을 heapq.heappush()로 받지 않고
배열을 입력받은 후 heapq.heapifty()를 이용해서 배열을 힙으로 바꿔주었는데, 메모리 차이는 없고 시간은 미세하게 더 빠른것 같다.

================================

7.26.
10-4
맞춤
------------------
11-2-1
sys.stdin.readline()으로 읽어야지
그냥 input()으로만 입력을 받는다면 시간초과 난다
------------------
11-2-2
맞추긴 했는데 시간이 너무 오래 걸린다
heapq는 sys.stdin.readline()으로 입력받아야 좋을것 같다

==============================

7.27.
10-4
맞춤
--------------------
11-2-1
조건을 if x>0과 else로 했는데 문제없다.
자연수인 경우와 0을 입력할 경우로 문제가 주어져서 그런것 같다
이렇게 하면 음수를 입력하는 경우에도 0을 입력하는것과 같은 결과를 출력해서 안될것 같았는데 괜찮은가보다.
-----------------------
11-2-2
자꾸 생각없이 이번에 최소값들의 합을 재반입 하는게 아니라,
총합을 반입한다.
집중해서 문제풀자

===================================

7.28.
10-4
맞춤
----------------------
11-2-1
맞춤
----------------------
11-2-2
맞춤