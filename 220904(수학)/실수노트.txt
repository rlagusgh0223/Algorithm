9. 4.
16-2-1
해당 식이 어떻게 되는지 몰랐다
N! / (K! * (N-K)!)
팩토리얼로 반복문을 돌리므로 숫자 자체가 나와야 되니
반복문 조건으로 +1 붙일것
----------------------------------
16-2-2
책에서는 모듈러 연산을 이용해서 푸느라 복잡하게 풀었는데
아직 뭔지 모르겠다
굳이 그렇게 안해도 맞았다고 나오지만
책에서 하라는 대로 해보겠다
-------------------------------------
16-3-2
끝까지 계산해도 나누어떨어지지 않아서 True를 리턴하게 해야되는데
첫 반복문에서 else로 True를 리턴하게 했다.

받는 값이 1일때를 가정해두지 않으면
함수 내에 반복문에서 오류나는데 그 경우를 생각하지 못했다.
함수 내 반복문은 2에서부터 시작
------------------------------------------
16-3-5
유크리드 호제법을 이용해 최대공약수를 구하는 방법과
최대공약수를 어떻게 나눠야 최소공배수가 나오는지 몰랐다.

======================

9. 5.
16-2-1
맞춤
-----------
16-2-2
모듈러 연산을 어떻게 하는건지 모르겠다
------------------------------------------------
16-3-2
맞춤
소수를 구하는 반복문을 1부터 시작하면 모든 수가 소수로 구분된다
-----------------------------------------------------------------------------
16-3-5
최대공약수, 최소공배수 구하는 법을 잊어버렸다

====================================

9. 6.
16-2-1
맞춤
----------
16-2-2
마지막에 배열값 출력할때 입력한 숫자 그대로 넣어준다
-1 넣지 않는다
print(dp[N][K])
--------------------
16-3-2
맞춤
----------
16-3-5
최대 공약수를 구할때 if-else로 상황에 맞춰 값을 리턴해야 되는데
if만 넣어서 어떤 상황에도 a를 리턴하게 했다.

==================================================

9. 7.
16-2-1
맞춤
-----------
16-2-2
식을 기억하지 못했고
오타가 났는데 에러를 보지 않아 왜 틀렸는지 이해를 못했다.
--------------------------------------------------------------------
16-3-2
맞춤
----------
16-3-5
맞춤

==========================

9. 8.
16-2-1
맞춤
-----------
16-2-2
맞춤
-----------
16-3-2
맞춤
------------
16-3-5
맞춤

=============

9. 9.
16-2-1
맞춤
----------
16-2-2
조건문과 점화식을 기억 못했다.
-----------------------------------------
16-3-2
졸면서 풀어서 그런지 조건문 부분에서 0이 맞는지 확인해야 되는데
생각을 못했다.
------------------
16-3-5
맞춤

================

9.10.
16-2-1
맞춤
----------
16-2-2
맞춤
-----------
16-3-2
맞춤
-----------
16-3-5
맞춤