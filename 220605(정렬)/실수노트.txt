22.06.05

18-4
맞춤
-------------------------------------------
18-5
n번째 값은 answer(1 + ~ n-1번째)값 보다 작으면
answer-1까지의 무게는 측정할 수 있다

마지막 값이 커서 계산 못하는 경우만 생각해서
마지막 값을 계산하는걸 포함 못했다
-------------------------------------------
18-6
계수정렬을 기억하지 못했다
메모리 초과 나왔다
배열을 하나만 해도 되는데 두개로 만들어서 그런 것 같다
-------------------------------------------
18-7
lambda를 이용해서 오름차순으로 만드는 방법을 몰랐다
lambda x:x[0] 는
함수 x는 x[0]을 return한다는 의미이다
내림차순으로 만들고 싶으면 -x[0]으로 해주면 된다

======================================

6. 6.
18-4
맞춤
--------------------------------------------
18-5
맞춤
-------------------------------------------
18-6
맞춤
그런데 이전에 했던것과 코드가 크게 다르지 않는데
(메모리는 같다)
시간은 좀 느려졌다
-------------------------------------------
18-7
맞춤

=======================================

6. 7.
18-4
맞춤
-------------------------------------------
18-5
맞춤
코드는 기억하고 어떤 결과를 얻기 위해서 짜는지도 알겠는데
거기까지 가는 방법을 모르겠다
구현을 위해 규칙을 찾는 방법을 공부해야될 것 같다
-------------------------------------------
18-6
맞춤
계수정렬에 대해서는 아는것 같은데
이걸 코드로 구현할때 헷갈리는것 같다
-------------------------------------------
18-7
맞춤
key=lambda의 의미는 모르겠지만
lambda x:x[0]의 의미는 안다
이런식으로 리스트에서 오름차순, 내림차순을 골라
출력하는건 할 수 있을 것 같다

=======================================

6. 8.
18-4
맞춤
------------------------
18-5
맞춤
리스트를 받는걸 다르게 해봤다
------------------------
18-6
맞춤
------------------------
18-7
맞춤
백준 사이트에 올릴때 오름차순으로 만드는 코드를
내림차순으로 만든다고 잘못 올렸다


=======================================

6. 9.
18-4
맞춤
------------------------
18-5
맞춤
------------------------
18-6
맞춤
배열의 크기를 1개 줄여보았다
메모리나 속도가 차이나진 않겠지만
매일 똑같은 코드만 치고 있으니 뭐라도
변화를 줘야 할 것 같아서 그랬다
------------------------
18-7
맞춤
key=lambda x:x[0]은 x[0]의 값을 비교해서
오름차순으로 출력한다는 뜻이다