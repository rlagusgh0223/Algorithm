from collections import deque
n, m, v = map(int, input().split())
visited = [0 for _ in range(n+1)]
graph = [[0 for _ in range(n+1)] for _ in range(n+1)]

for _ in range(m):                          #간선 입력하는거니까 간선수만큼 반복문
    a, b = map(int, input().split())        #ex) 13이면 [1][3],[3][1]에 1 입력
    graph[a][b] = 1
    graph[b][a] = 1

def DFS(x):
    print(x, end=' ')
    s = []
    for i in range(1,n+1):
        if graph[x][i] == 1 and visited[i]==0:
            s.append(i)
            visited[i]=1
            DFS(i)

def BFS(x):
    q = deque()
    q.append(x)
    while len(q) != 0:
        now = q.popleft()
        print(now, end=' ')
        for i in range(1,n+1):
            if graph[now][i] == 1 and visited[i]==1:
                visited[i]=2
                q.append(i)

visited[v]=1#처음 시작하라고 한 값은 방문한걸로 간주
DFS(v)
print()
visited[v]=2
BFS(v)