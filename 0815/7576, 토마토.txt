from collections import deque
M, N = map(int,input().split())         #상자의 가로(M), 세로(N) 입력
graph = [[0 for _ in range(M)] for _ in range(N)]
check = [[0 for _ in range(M)] for _ in range(N)]
q = deque()

for i in range(N):
    lst = list(input().split())
    for j in range(M):
        graph[i][j] = lst[j]
        check[i][j] = -1        #
        if(graph[i][j] == '1'):   #
            q.append([i,j])      #
            check[i][j]=0       #

#for i in range(N):
#    print(graph[i])
dr = [1,-1,0,0]
dc = [0,0,-1,1]

while len(q) != 0:
    now = q.popleft()
    c = now[0]      #세로
    r = now[1]      #가로
    for k in range(4):
        nc = c+dc[k]
        nr = r + dr[k]
        if 0<=nr and nr<M and 0<=nc and nc<N:  #nr이 가로, nc가 세로
            if graph[nc][nr]==0 and check[nc][nr]==-1:
                print(check[nc][nr],end=' ')
                check[nc][nr] = check[c][r]+1
                q.append([nc,nr])


ans = 0
for i in range(N):
    for j in range(M):
        #print(check[i][j],end=' ')
        if ans<check[i][j]:
            ans = check[i][j]

for i in range(N):
    for j in range(M):
        if graph[i][j] == 0 and check[i][j] == -1:
            ans = -1
            RFS

print(ans)
