# 모범답안
# 내가 풀진 못했다.
n, m = map(int, input().split())    # n, m 입력
paper = [[0 for col in range(511)] for row in range(511)]    # 종이의 크기 511*511로 초기화(최댓값 500을 조금 넘는 크기)
answer = 0    # 정답을 저장하기 위한 변수
figure = [    # 19개의 도형 좌표
    [[0, 0], [0, 1], [1, 0], [1, 1]],
    [[0, 0], [0, 1], [0, 2], [0, 3]],
    [[0, 0], [1, 0], [2, 0], [3, 0]],
    [[0, 0], [0, 1], [0, 2], [-1, 2]],
    [[0, 0], [1, 0], [2, 0], [2, 1]],
    [[0, 0], [1, 0], [0, 1], [0, 2]],
    [[0, 0], [0, 1], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [-1, 1], [-1, 2]],
    [[0, 0], [1, 0], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 1]],
    [[0, 0], [1, 0], [2, 0], [1, 1]],
    [[0, 0], [0, 1], [0, 2], [1, 1]],
    [[0, 0], [0, 1], [-1, 1], [1, 1]],
    [[0, 0], [0, 1], [1, 1], [1, 2]],
    [[0, 0], [1, 0], [1, -1], [2, -1]],
    [[0, 0], [1, 0], [1, 1], [1, 2]],
    [[0, 0], [0, 1], [1, 0], [2, 0]],
    [[0, 0], [0, 1], [0, 2], [1, 2]],
    [[0, 0], [1, 0], [2, 0], [2, -1]],
]

for i in range(1, n+1):    # 종이의 상태를 이해하기 쉽게 1 ~ n까지 좌표
    row = list(map(int, input().split()))
    for j in range(1, m+1):
        paper[i][j] = row[j-1]

for i in range(1, 501):    # 가로의 최대 크기만큼 for문 탐색
    for j in range(1, 501):    # 세로의 최대 크기만큼 for문 탐색
        for k in range(0, 19):    # 도형의 개수(19)만큼 for문 탐색
            sum = 0    # 중간값을 저장하기 위한 변수
            for l in range(0, 4):    # 정사각형의 위치 4만큼 for문 탐색
                y = i + figure[k][l][0]
                x = j + figure[k][l][1]
                if paper[y][x] == 0:    # 얻은 x,y 좌표를 통해 paper[y][x]가 0이라면 종이의 범위를 벗어나므로
                    sum=0    # 중간값을 0으로 한채 종료(반복문을 1부터 줬으므로 0은 종이의 범위를 벗어나게 됨)
                    break
                sum += paper[y][x]    # 종이의 범위를 벗어나지 않는다면 정사각형의 위치에 있는 종이값을 sum에 더해준다
            answer = max(answer, sum)    # answer값에 중간 값들과 비교하여 최댓값을 저장

print(answer)