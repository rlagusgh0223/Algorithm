import sys
from collections import deque
dq=deque()

def push_front(x):
    return dq.appendleft(x)

def push_back(x):
    return dq.append(x)

def pop_front():
    if(not dq):
        return -1
    else:
        return dq.popleft()

def pop_back():
    if(not dq):
        return -1
    else:
        return dq.pop()

def size():
    return len(dq)

def empty():
    if (not dq):
        return 1
    else:
        return 0

def front():
    if (not dq):
        return -1
    else:
        return dq[0]

def back():
    if (not dq):
        return -1
    else:
        return dq[-1]
    

N = int(sys.stdin.readline())
for i in range(N):
    word = sys.stdin.readline().split()
    order = word[0]

    if order == 'push_front':
        push_front(word[1])
    elif order == 'push_back':
        push_back(word[1])
    elif order=='pop_front':
        print(pop_front())
    elif order=='pop_back':
        print(pop_back())
    elif order == 'size':
        print(size())
    elif order == 'empty':
        print(empty())
    elif order == 'front':
        print(front())
    elif order == 'back':
        print(back())


#모범답안
import sys
n_prob = int(sys.stdin.readline())
deque = []
for _ in range(n_prob):
    command = sys.stdin.readline().rstrip()
    if 'push_front' in command:
        deque.insert(0, int(command.split()[1]))
    elif 'push_back' in command:
        deque.append(int(command.split()[1]))
    elif command == 'pop_front':
        print(deque.pop(0)) if deque else print(-1)
    elif command == 'pop_back':
        print(deque.pop()) if deque else print(-1)
    elif command == 'size':
        print(len(deque))
    elif command == 'empty':
        print(0) if deque else print(1)
    elif command == 'front':
        print(deque[0]) if deque else print(-1)
    elif command == 'back':
        print(deque[-1]) if deque else print(-1)